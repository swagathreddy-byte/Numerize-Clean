"""
Django settings for Workspace project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/
env = environ.Env()
environ.Env.read_env()
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')
# AUTH_USER_MODEL="User"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)
LOGIN_REDIRECT_URL = 'dashboard'
LOGOUT_REDIRECT_URL = '/accounts/login'

ALLOWED_HOSTS = ['localhost','40.80.81.211','firstcourse.in','www.firstcourse.in']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    ######################Installed Apps###################################
    'collectfast',
    'background_task',
    'pwa',
    'django_celery_beat',
    'django_user_agents',
    'storages',
    'dbbackup',
    'rest_framework',
    ######################Custom Apps######################################
    'Frontend', #All frontend templates come from here
    'OCR', #OCR module to read stuff
    'ReportManagement', #Report Management Happens here
    'SubscriptionManagement', #Subscription management and all related analytics
    'CustomerManagement', #Customer management and all related analytics
    'EmployeeManagement', #Employee management and all related analytics
    'ThirdParty_APIManagement',
    'Tools', #All tools

    'spirit.core',
    'spirit.admin',
    'spirit.search',

    'spirit.user',
    'spirit.user.admin',
    'spirit.user.auth',

    'spirit.category',
    'spirit.category.admin',

    'spirit.topic',
    'spirit.topic.admin',
    'spirit.topic.favorite',
    'spirit.topic.moderate',
    'spirit.topic.notification',
    'spirit.topic.private',
    'spirit.topic.unread',

    'spirit.comment',
    'spirit.comment.bookmark',
    'spirit.comment.flag',
    'spirit.comment.flag.admin',
    'spirit.comment.history',
    'spirit.comment.like',
    'spirit.comment.poll',

    'djconfig',
    'haystack',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'djconfig.middleware.DjConfigMiddleware',
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'spirit_cache',
    },
    'st_rate_limit': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'spirit_rl_cache',
        'TIMEOUT': None
    }
}

ROOT_URLCONF = 'Workspace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'djconfig.context_processors.config',
            ],
        },
    },
]

WSGI_APPLICATION = 'Workspace.wsgi.application'

COLLECTFAST_THREADS = 20
COLLECTFAST_STRATEGY = "collectfast.strategies.boto3.Boto3Strategy"

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'fc-workspace',#smart_accounting casmart
        'USER': env.str('DB_USER'),
        'PASSWORD': env.str('DB_PASSWORD'),
        'HOST': 'localhost',
        'PORT': '',
    },
}

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'st_search'),
    },
}
HAYSTACK_SIGNAL_PROCESSOR = 'spirit.search.signals.RealtimeSignalProcessor'


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/



REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}


#Static files hosted on S3
AWS_ACCESS_KEY_ID = env.str('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = env.str('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 'firstcourse-static'
# AWS_CACHE_BUCKET_NAME='fc-cache'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_DEFAULT_ACL = None
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_STATIC_LOCATION = 'static'
STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_STATIC_LOCATION)

STATICFILES_STORAGE = 'Workspace.storage_backend.StaticStorage'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'Frontend/static/js', 'serviceworker.js')

AWS_PUBLIC_MEDIA_LOCATION = 'media/public'
DEFAULT_FILE_STORAGE = 'Workspace.storage_backend.PublicMediaStorage'


AWS_PRIVATE_MEDIA_LOCATION = 'media/private'
PRIVATE_FILE_STORAGE = 'Workspace.storage_backend.PrivateMediaStorage'

AWS_OCR_BUCKET_NAME = 'firstcourse-ocr'
AWS_OCR_URL='https://%s.s3.amazonaws.com/' % (AWS_OCR_BUCKET_NAME)
AWS_OCR_LOCATION=''
OCR_FILE_STORAGE = 'Workspace.storage_backend.OCRStorage'


SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')

EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
EMAIL_PORT = 587
EMAIL_USE_TLS = True

PWA_APP_NAME = 'FirstCourse'
PWA_APP_DESCRIPTION = "CA at fingertips"
PWA_APP_THEME_COLOR = '#0A0302'
PWA_APP_BACKGROUND_COLOR = '#ffffff'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/reports/summary/'
PWA_APP_ICONS = [
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/16x16.png',
        'sizes': '16x16'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/32x32.png',
        'sizes': '32x32'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/64x64.png',
        'sizes': '64x64'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/80x80.png',
        'sizes': '80x80'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/128x128.png',
        'sizes': '128x128'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/160x160.png',
        'sizes': '160x160'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/256x256.png',
        'sizes': '256x256'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/512x512.png',
        'sizes': '512x512'
    },

]
PWA_APP_ICONS_APPLE = [
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/16x16.png',
        'sizes': '16x16'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/32x32.png',
        'sizes': '32x32'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/64x64.png',
        'sizes': '64x64'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/80x80.png',
        'sizes': '80x80'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/128x128.png',
        'sizes': '128x128'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/160x160.png',
        'sizes': '160x160'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/256x256.png',
        'sizes': '256x256'
    },
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/brand/512x512.png',
        'sizes': '512x512'
    }
]
PWA_APP_SPLASH_SCREEN = [
    {
        'src': 'https://smartca-static.s3.amazonaws.com/static/assets/img/Shape.png',
        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'
PWA_APP_DEBUG_MODE = False

#################################EMAIL SENDGRID SETTINGS
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey' # this is exactly the value 'apikey'
EMAIL_HOST_PASSWORD = "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"
EMAIL_PORT = 587
EMAIL_USE_TLS = True

##########################################QB####################################
DISCOVERY_DOCUMENT = 'https://developer.api.intuit.com/.well-known/openid_sandbox_configuration/'

#Development
# CLIENT_ID = 'AB71n5vbmFAaI1dYtpISDnXTWkfm0Kb3zb42OrQPTwOEk4E0Po'
# CLIENT_SECRET = 'WPRJrFjyKuohfOZC73GGl8Rj6MynxKL4BCC1zkUr'
# REDIRECT_URI = 'http://localhost:8000/quickbooks_api/authCodeHandler'
#SANDBOX_QBO_BASEURL = 'https://sandbox-quickbooks.api.intuit.com'


#Production
CLIENT_ID = env.str('QB_CLIENT_ID')
CLIENT_SECRET = env.str('QB_CLIENT_SECRET')
REDIRECT_URI = 'https://firstcourse.in/quickbooks_api/authCodeHandler'
SANDBOX_QBO_BASEURL = 'https://quickbooks.api.intuit.com'



ACCOUNTING_SCOPE = 'com.intuit.quickbooks.accounting'
OPENID_SCOPES = ['openid', 'profile', 'email', 'phone', 'address']
GET_APP_SCOPES = ['com.intuit.quickbooks.accounting', 'openid', 'profile', 'email', 'phone', 'address']
SANDBOX_PROFILE_URL = 'https://sandbox-accounts.platform.intuit.com/v1/openid_connect/userinfo'
ID_TOKEN_ISSUER = 'https://oauth.platform.intuit.com/op/v1'

DBBACKUP_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
DBBACKUP_STORAGE_OPTIONS = {
    'access_key': AWS_ACCESS_KEY_ID,
    'secret_key': AWS_SECRET_ACCESS_KEY,
    'bucket_name': 'firstcourse-db-backups',
    'default_acl': 'private',
}

ST_SITE_URL = 'http://127.0.0.1:8000/'
CELERY_BROKER_URL = 'amqp://localhost'
#ST_SITE_URL = 'https://example.com/'